module contador_tb();

// Parámetros
parameter CLK_PERIOD = 10;  // Periodo del reloj en unidades de tiempo

// Señales de prueba
reg clk = 0;   // Señal de reloj
reg rst = 0;   // Señal de reset
wire [1:0] count_2;  // Contador de 2 bits
wire [3:0] count_4;  // Contador de 4 bits
wire [5:0] count_6;  // Contador de 6 bits

// Instanciar contador para diferentes anchos de bits
contador #(.N(2)) contador_2 (.clk(clk), .rst(rst), .count(count_2));
contador #(.N(4)) contador_4 (.clk(clk), .rst(rst), .count(count_4));
contador #(.N(6)) contador_6 (.clk(clk), .rst(rst), .count(count_6));

// Generar señal de reloj
always #CLK_PERIOD clk = ~clk;

// Secuencia de prueba
initial begin
    // Inicializar reset
    rst = 1;
    #20;
    rst = 0;

    // Esperar a que el contador alcance su valor máximo
    #100;

    // Imprimir los valores finales de los contadores
    $display("Contador de 2 bits: %d", count_2);
    $display("Contador de 4 bits: %d", count_4);
    $display("Contador de 6 bits: %d", count_6);

    // Finalizar simulación
    $finish;
end

endmodule
