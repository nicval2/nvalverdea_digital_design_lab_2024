module adder_4bit(
  input logic [3:0] a,
  input logic [3:0] b,
  output logic [3:0] out
);
  logic [3:0] carry;
  always_comb begin
    carry[0] = a[0] & b[0];
    carry[1] = (a[1] & b[1]) | (a[1] & carry[0]) | (b[1] & carry[0]);
    carry[2] = (a[2] & b[2]) | (a[2] & carry[1]) | (b[2] & carry[1]);
    carry[3] = (a[3] & b[3]) | (a[3] & carry[2]) | (b[3] & carry[2]);
    out = a ^ b ^ carry;
  end
endmodule