module subtractor_4bit(
  input logic [3:0] a,
  input logic [3:0] b,
  output logic [3:0] out
);
  logic [3:0] borrow;
  always_comb begin
    borrow[0] = ~a[0] & b[0];
    borrow[1] = (~a[1] & b[1]) | (~a[1] & borrow[0]) | (b[1] & borrow[0]);
    borrow[2] = (~a[2] & b[2]) | (~a[2] & borrow[1]) | (b[2] & borrow[1]);
    borrow[3] = (~a[3] & b[3]) | (~a[3] & borrow[2]) | (b[3] & borrow[2]);
    out = a ^ b ^ borrow;
  end
endmodule